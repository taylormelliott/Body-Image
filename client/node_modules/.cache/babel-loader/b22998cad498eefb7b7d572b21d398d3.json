{"ast":null,"code":"import _classCallCheck from\"/Users/TaylorElliott/Documents/Devmountain/Projects/BodyFat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/TaylorElliott/Documents/Devmountain/Projects/BodyFat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/TaylorElliott/Documents/Devmountain/Projects/BodyFat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/TaylorElliott/Documents/Devmountain/Projects/BodyFat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/TaylorElliott/Documents/Devmountain/Projects/BodyFat-App/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import LogList from'../LogList/LogList';import'./input.css';import axios from'axios';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Input=/*#__PURE__*/function(_Component){_inherits(Input,_Component);var _super=_createSuper(Input);function Input(){var _this;_classCallCheck(this,Input);_this=_super.call(this);_this.state={weightInput:0,bodyFatInput:0,result:'',logs:[],showAlert:true,showDeleteAlert:true};_this.handleForm=_this.handleForm.bind(_assertThisInitialized(_this));_this.toggleAlert=_this.toggleAlert.bind(_assertThisInitialized(_this));_this.toggleDeleteAlert=_this.toggleDeleteAlert.bind(_assertThisInitialized(_this));return _this;}//make an axios call to the results table returning everything by user_id\n_createClass(Input,[{key:\"handleWeight\",value:function handleWeight(e){this.setState({weightInput:e});}},{key:\"handleBodyFat\",value:function handleBodyFat(e){this.setState({bodyFatInput:e});}},{key:\"handleForm\",value:function handleForm(e){var _this2=this;e.preventDefault();var dateObj=new Date();var month=dateObj.getUTCMonth()+1;//months from 1-12\nvar day=dateObj.getUTCDate();var year=dateObj.getUTCFullYear();var newdate=month+\"/\"+day+\"/\"+year;var weight=parseFloat(this.state.weightInput);var currentBodyFat=parseFloat(this.state.bodyFatInput);var goalBodyFat=parseFloat(this.props.location.state);function leanBodyMass(){var fatMass=weight*currentBodyFat;var lbm=weight-fatMass;return lbm;}var lbm=leanBodyMass();function goalBodyWeight(){var goalWeight=Math.floor(lbm/(1-goalBodyFat));return goalWeight;}var goalWeight=goalBodyWeight();// console.log(goalBodyWeight())\nfunction totalFatWeightLost(){var fatToLose=weight-goalWeight;return fatToLose;}var totalFatLost=totalFatWeightLost();// console.log(totalFatWeightLost())\nfunction timeToGoal(){var weeks=0;for(var i=weight;i>=goalWeight;i-=i*0.01){weeks++;}return weeks;}var weeksToGoal=timeToGoal();// console.log(timeToGoal())\nfunction tdee(){var kg=weight*.45;var bmr=kg*20;var thermicFood=bmr*.1;var exerciseCal=400;var nonExerciseCal=400;var result=bmr+thermicFood+exerciseCal+nonExerciseCal;return Math.floor(result-500);}var totalCals=tdee();function bodyFatCalc(){return\"You need to eat \".concat(totalCals,\" calories per day to reach your goal of \").concat(Math.floor(goalBodyFat*100),\"%. Aim to lose 1% of your weight per week. It will take \").concat(weeksToGoal,\" weeks to achieve your goal. You will weight \").concat(goalWeight,\"lbs and have lost \").concat(totalFatLost,\" lbs of fat if no muscle mass was lost or gained in the process. It's common to lose or gain some muscle when cutting calories depending on exercise experience. This result should be taken as best case scenario.\");}this.setState({result:bodyFatCalc()});axios.post('/results/add',{user_id:this.props.id,desired_body_fat:this.props.location.state,weight_logs:this.state.weightInput,body_fat_logs:this.state.bodyFatInput,date_logs:newdate,results:this.state.result}).then(function(response){console.log(_this2.state.result);},function(error){console.log(error);});}},{key:\"toggleAlert\",value:function toggleAlert(){var _this3=this;this.setState({showAlert:!this.state.showAlert});setTimeout(function(){_this3.setState({showAlert:!_this3.state.showAlert});},3000);}},{key:\"toggleDeleteAlert\",value:function toggleDeleteAlert(){var _this4=this;this.setState({showDeleteAlert:!this.state.showDeleteAlert});setTimeout(function(){_this4.setState({showDeleteAlert:!_this4.state.showDeleteAlert});},3000);}},{key:\"render\",value:function render(){var _this5=this;console.log(this.props.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"min-height\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:this.handleForm,children:[/*#__PURE__*/_jsx(\"div\",{className:\"button justify-content-center\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Home\"})}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Sign in to save and log results. Log your results by entering your current weight and body fat\"}),/*#__PURE__*/_jsx(\"label\",{class:\"form-label\",children:\"Enter current weight\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",class:\"form-control\",onChange:function onChange(e){_this5.handleWeight(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{class:\"form-label\",children:\"Enter current body fat as a decimal (Ex. 35% body fat (35/100 = .35)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",class:\"form-control\",onChange:function onChange(e){_this5.handleBodyFat(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",class:\"btn btn-primary\",children:\"Submit\"})]})}),/*#__PURE__*/_jsx(\"div\",{class:\"m-2\",children:!this.state.showAlert&&/*#__PURE__*/_jsx(\"div\",{class:\"alert alert-success\",role:\"alert\",children:\"Changes Saved!\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"m-2\",children:!this.state.showDeleteAlert&&/*#__PURE__*/_jsx(\"div\",{class:\"alert alert-danger\",role:\"alert\",children:\"Log Deleted!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"title-width d-flex justify-content center\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Progress Logs\"})}),/*#__PURE__*/_jsx(\"div\",{class:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"row align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{class:\"col box-width overflow-scroll\",children:/*#__PURE__*/_jsx(LogList,{id:this.props.id,toggleAlert:this.toggleAlert,toggleDeleteAlert:this.toggleDeleteAlert})}),/*#__PURE__*/_jsx(\"div\",{class:\"col\",className:\"result-width\",children:/*#__PURE__*/_jsx(\"h1\",{children:this.state.result})})]})})]});}}]);return Input;}(Component);export{Input as default};","map":{"version":3,"sources":["/Users/TaylorElliott/Documents/Devmountain/Projects/BodyFat-App/client/src/components/Input/Input.jsx"],"names":["React","Component","LogList","axios","Link","Input","state","weightInput","bodyFatInput","result","logs","showAlert","showDeleteAlert","handleForm","bind","toggleAlert","toggleDeleteAlert","e","setState","preventDefault","dateObj","Date","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","newdate","weight","parseFloat","currentBodyFat","goalBodyFat","props","location","leanBodyMass","fatMass","lbm","goalBodyWeight","goalWeight","Math","floor","totalFatWeightLost","fatToLose","totalFatLost","timeToGoal","weeks","i","weeksToGoal","tdee","kg","bmr","thermicFood","exerciseCal","nonExerciseCal","totalCals","bodyFatCalc","post","user_id","id","desired_body_fat","weight_logs","body_fat_logs","date_logs","results","then","response","console","log","error","setTimeout","handleWeight","target","value","handleBodyFat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport LogList from '../LogList/LogList'\nimport './input.css'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nexport default class Input extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            weightInput: 0,\n            bodyFatInput: 0,\n            result: '',\n            logs: [],\n            showAlert: true, \n            showDeleteAlert: true\n            \n\n            \n        }\n        this.handleForm = this.handleForm.bind(this)\n        this.toggleAlert = this.toggleAlert.bind(this)\n        this.toggleDeleteAlert = this.toggleDeleteAlert.bind(this)\n    }\n\n    //make an axios call to the results table returning everything by user_id\n   \n\n    handleWeight(e) {\n        this.setState({ weightInput: e})\n        \n\n\n    }\n\n    handleBodyFat(e) {\n        this.setState({ bodyFatInput: e})\n    }\n\n    handleForm(e) {\n        e.preventDefault()\n\n        var dateObj = new Date();\nvar month = dateObj.getUTCMonth() + 1; //months from 1-12\nvar day = dateObj.getUTCDate();\nvar year = dateObj.getUTCFullYear();\n\nlet newdate = month + \"/\" + day + \"/\" + year;\n\n\n\n        \n\n        \n        let weight = parseFloat(this.state.weightInput)\n        let currentBodyFat = parseFloat(this.state.bodyFatInput)\n        let goalBodyFat = parseFloat(this.props.location.state)\n\n        function leanBodyMass() {\n        const fatMass = weight * currentBodyFat\n        const lbm = weight - fatMass\n        return lbm\n\n        }\n\n        const lbm = leanBodyMass()\n\n        function goalBodyWeight() {\n        const goalWeight = Math.floor(lbm/(1-goalBodyFat))\n        return goalWeight\n\n        }\n\n        const goalWeight = goalBodyWeight()\n\n        // console.log(goalBodyWeight())\n\n        function totalFatWeightLost() {\n        const fatToLose = weight - goalWeight\n        return fatToLose\n        }\n\n        const totalFatLost= totalFatWeightLost()\n        // console.log(totalFatWeightLost())\n\n        function timeToGoal() {\n        \n        let weeks = 0\n\n        for (let i = weight; i >= goalWeight; i-= (i * 0.01)){\n        weeks++\n        \n        }\n        return weeks\n        }\n\n        const weeksToGoal = timeToGoal()\n\n\n        // console.log(timeToGoal())\n\n        function tdee() {\n        const kg = weight * .45\n        const bmr = kg * 20\n        const thermicFood = bmr * .1\n        const exerciseCal = 400\n        const nonExerciseCal = 400\n        const result = bmr + thermicFood + exerciseCal + nonExerciseCal\n        return Math.floor(result - 500)\n        \n        }\n\n        const totalCals = tdee()\n\n        function bodyFatCalc() {\n        return(`You need to eat ${totalCals} calories per day to reach your goal of ${Math.floor(goalBodyFat * 100)}%. Aim to lose 1% of your weight per week. It will take ${weeksToGoal} weeks to achieve your goal. You will weight ${goalWeight}lbs and have lost ${totalFatLost} lbs of fat if no muscle mass was lost or gained in the process. It's common to lose or gain some muscle when cutting calories depending on exercise experience. This result should be taken as best case scenario.`)\n        \n\n}\n    this.setState({ result: bodyFatCalc()})\n\n\n    axios.post('/results/add', {\n        user_id: this.props.id,\n        desired_body_fat: this.props.location.state, \n        weight_logs: this.state.weightInput,\n        body_fat_logs: this.state.bodyFatInput,\n        date_logs: newdate,\n        results: this.state.result\n    })\n    .then((response) => {\n        console.log(this.state.result)\n        \n      }, (error) => {\n        console.log(error);\n      });\n\n    }\n\n    toggleAlert() {\n        this.setState({ showAlert: !this.state.showAlert})\n        setTimeout(() => {this.setState({ showAlert: !this.state.showAlert})}, 3000)\n    }\n\n    toggleDeleteAlert() {\n        this.setState({ showDeleteAlert: !this.state.showDeleteAlert})\n        setTimeout(() => {this.setState({ showDeleteAlert: !this.state.showDeleteAlert})}, 3000)\n    }\n    \n    \n\n\n    render() {\n        console.log(this.props.id)\n        return (\n            <div className=\"min-height\"  >\n                        \n                \n                <div>\n                        \n                    \n                    \n\n                    <form   onSubmit={this.handleForm}>\n                        <div className='button justify-content-center'>\n                            <Link to='/'>Home</Link>\n                        </div>\n                        <div class=\"mb-3\">\n                        <p>Sign in to save and log results. Log your results by entering your current weight and body fat</p>\n                            <label  class=\"form-label\">Enter current weight</label>\n                            <input type=\"number\" class=\"form-control\" onChange={(e) => {this.handleWeight(e.target.value)}}  />\n                            \n                        </div>\n                        <div class=\"mb-3\">\n                            <label  class=\"form-label\">Enter current body fat as a decimal (Ex. 35% body fat (35/100 = .35)</label>\n                            <input type=\"text\" class=\"form-control\" onChange={(e) => {this.handleBodyFat(e.target.value)}} />\n                        </div>\n                        \n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                    </form>\n\n                </div>\n\n                <div class='m-2'>\n\n                {!this.state.showAlert && <div class=\"alert alert-success\" role=\"alert\">\n                Changes Saved!\n                </div> }\n\n                </div>\n\n                <div class='m-2'>\n                    {!this.state.showDeleteAlert && <div class=\"alert alert-danger\" role=\"alert\">\n                    Log Deleted!\n                    </div> }\n                </div>\n\n                \n\n                \n                <div className='title-width d-flex justify-content center'>\n                <h1>Progress Logs</h1>\n                \n                </div>\n                \n                \n                <div class='container' >\n                \n                    <div class='row align-items-center' >\n                    \n                        <div class='col box-width overflow-scroll'>\n                        \n                            \n                            <LogList id = {this.props.id} toggleAlert = {this.toggleAlert} toggleDeleteAlert = {this.toggleDeleteAlert} />\n                        \n                        </div>\n                        <div class='col' className='result-width'><h1>{this.state.result}</h1></div>\n                    </div>\n                </div>\n\n                    \n                    \n\n                  \n                \n                \n                \n\n            \n                \n                \n                \n            </div>\n            \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}